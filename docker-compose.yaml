version: "3.8"

services:
  #== Broker ==#
  broker-db:
    build: ./ts-broker/db
    volumes:
      - ./ts-broker/db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=broker
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s # TODO: increase this when we aren't testing
      timeout: 5s
      retries: 5
    networks:
      - backend

  mongo-seed:
    image: mongo:5.0.3
    volumes:
      - ./ts-broker/db/data.json:/data.json:ro
    command:
      [
        "mongoimport",
        "--host",
        "broker-db",
        "-u",
        "${MONGO_ROOT_USER}",
        "-p",
        "${MONGO_ROOT_PASSWORD}",
        "--authenticationDatabase",
        "admin",
        "--db",
        "broker",
        "--collection",
        "Product",
        "--type",
        "json",
        "--file",
        "/data.json",
        "--jsonArray",
        "--upsertFields",
        "classId",
      ]
    depends_on:
      - broker-db
    networks:
      - backend

  broker:
    build: ./ts-broker/service
    ports:
      - "4000:4000"
    depends_on:
      - broker-db
    environment:
      MONGO_USERNAME: brokerUser
      MONGO_PASSWORD: brokerPassword
    networks:
      - backend
    restart: always

  #== Veggie Gophers ==#
  veggie-gophers-db:
    build: ./veggie-gophers/db
    environment:
      POSTGRES_USER: veggiegophers
      POSTGRES_PASSWORD: password
      POSTGRES_DB: veggiegophers
    volumes:
      - ./veggie-gophers/db/data:/var/lib/postgresql/data
      - ./veggie-gophers/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./veggie-gophers/db/items.csv:/items.csv
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veggiegophers"]
      interval: 5s # TODO: increase this when we aren't testing
      timeout: 5s
      retries: 5
    networks:
      - backend

  veggie-gophers:
    build: ./veggie-gophers/.
    ports:
      - 8080:8080
    environment:
      DATABASE_URL: postgres://veggiegophers:password@veggie-gophers-db:5432/veggiegophers?sslmode=disable
      BROKER_URL: http://broker:4000/graphql
    depends_on:
      veggie-gophers-db:
        condition: service_healthy
      broker:
        condition: service_started
    networks:
      - backend
    restart: always

  #== Meaty Pythons ==#
  meaty-pythons-db:
    build:
      context: ./meaty_pythons/db
      dockerfile: Dockerfile.redis
    ports:
      - "6379:6379"
    volumes:
      - ./meaty_pythons/db/data:/data
      - ./meaty_pythons/db/items.csv:/items.csv
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 5s # TODO: increase this when we aren't testing
      timeout: 5s
      retries: 5
    networks:
      - backend

  meaty-pythons:
    build:
      context: ./meaty_pythons/src
      dockerfile: Dockerfile.app
    volumes:
      - ./meaty_pythons/src:/app
      - ./meaty_pythons/db:/app/db
      - ./meaty_pythons/static:/app/static
      - ./meaty_pythons/config.ini:/app/config.ini
    depends_on:
      meaty-pythons-db:
        condition: service_healthy
      broker:
        condition: service_started
    environment:
      REDIS_URL: redis://meaty-pythons-db:6379/0
      BROKER_URL: http://broker:4000/graphql
    ports:
      - 8082:8082
    networks:
      - backend
    restart: always

  #== Fruitful Javascripts ==#
  fruitful-javascripts-db:
    build:
      context: ./fruitful_javascripts/db
      dockerfile: Dockerfile.sqlite
    volumes:
      - ./fruitful_javascripts/data:/data
    ports:
      - 8083:8083
    networks:
      - backend

  fruitful-javascripts:
    build:
      context: ./fruitful_javascripts/src
      dockerfile: Dockerfile
    volumes:
      - ./fruitful_javascripts/data:/data
    environment:
      BROKER_URL: http://broker:4000/graphql
    ports:
      - 8084:8084
    depends_on:
      - fruitful-javascripts-db
      - broker
    networks:
      - backend
    restart: always

  #== Website ==#
  website:
    image: gatsby-docker
    build: ./lambda-mart
    ports:
      - 8000:80
      # - 8000:8000
    depends_on:
      - broker
    networks:
      - backend
    restart: always

  #== Utility ==#
  mongo-express:
    image: mongo-express:0.54.0
    ports:
      - "8078:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=broker-db
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      broker-db:
        condition: service_healthy
    networks:
      - backend
    restart: always

networks:
  backend:
    driver: bridge
